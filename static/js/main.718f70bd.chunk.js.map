{"version":3,"sources":["store/dice/dice.actions.js","components/dice/dice.jsx","store/dice/dice.reducer.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["ROLL_DICE","rollDice","dispatch","roll","type","data","labels","datasets","backgroundColor","connect","state","diceState","dice","action_rollDice","useState","undefined","result","setResult","firstDie","setFirstDie","secondDie","setSecondDie","setGauge","useEffect","rolls","length","first","second","reduce","2","3","4","5","6","7","8","9","10","11","12","numbers","Object","keys","map","num","Number","sort","a","b","gaugeLevel","total","sum","Math","round","ratio","abs","getGaugeLevel","Container","Segment","Header","as","style","display","justifyContent","position","marginBottom","fontSize","Button","primary","onClick","floor","random","options","scales","yAxes","ticks","stepSize","beginAtZero","legend","initialState","diceReducer","action","rootReducer","combineReducers","store","createStore","App","Menu","Item","Link","name","to","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.718f70bd.chunk.js","sourcesContent":["export const ROLL_DICE = 'ROLL_DICE';\r\n\r\nexport function rollDice(dispatch) {\r\n    return roll => dispatch({ type: ROLL_DICE, roll });\r\n}","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { Container, Segment, Header, Button } from 'semantic-ui-react';\r\nimport { rollDice } from '../../store/dice/dice.actions';\r\nimport { connect } from 'react-redux';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Gauge from 'react-svg-gauge';\r\n\r\nconst data = {\r\n    labels: ['2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],\r\n    datasets: [\r\n        {\r\n            data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            backgroundColor: [\"#3e95cd\", \"#3e95cd\", \"#3e95cd\", \"#3e95cd\", \"#3e95cd\", \"#3e95cd\", \"#3e95cd\", \"#3e95cd\", \"#3e95cd\", \"#3e95cd\", \"#3e95cd\", \"#3e95cd\", ],\r\n        }\r\n    ]\r\n}\r\n\r\nconst Dice = ({\r\n    diceState,\r\n    action_rollDice,\r\n}) => {\r\n    const [result, setResult] = useState(undefined);\r\n    const [firstDie, setFirstDie] = useState(0);\r\n    const [secondDie, setSecondDie] = useState(0);\r\n    const [gauge, setGauge] = useState(0);\r\n\r\n    const getGaugeLevel = rolls => {\r\n        const total = Object.keys(rolls).reduce((sum, num) => {\r\n            return sum + rolls[num];\r\n        }, 0);\r\n        return Math.round(Object.keys(rolls).reduce((gaugeLevel, num) => {\r\n            const amount = rolls[num];\r\n            const ratio = amount / total;\r\n            let diff;\r\n            if (num === 2 || num === 12) {\r\n                diff = Math.abs(ratio - 1 / 36);\r\n            } else if (num === 3 || num === 11) {\r\n                diff = Math.abs(ratio - 2 / 36);\r\n            } else if (num === 4 || num === 10) {\r\n                diff = Math.abs(ratio - 3 / 36);\r\n            } else if (num === 5 || num === 9) {\r\n                diff = Math.abs(ratio - 4 / 36);\r\n            } else if (num === 6 || num === 8) {\r\n                diff = Math.abs(ratio - 5 / 36);\r\n            } else {\r\n                diff = Math.abs(ratio - 6 / 36);\r\n            }\r\n\r\n            return gaugeLevel += diff;\r\n        }, 0) * 36);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (diceState.rolls.length) {\r\n            const [first, second] = diceState.rolls[diceState.rolls.length - 1];\r\n            const rolls = diceState.rolls.reduce((result, roll) => {\r\n                const sum = roll[0] + roll[1];\r\n                result[sum]++;\r\n                return result;\r\n            }, { 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 0, 11: 0, 12: 0 });\r\n            \r\n            const numbers = Object.keys(rolls)\r\n                .map(num => Number(num))\r\n                .sort((a, b) => a - b)\r\n                .map(num => rolls[num]);\r\n\r\n            data.datasets[0].data = numbers;\r\n\r\n            const gaugeLevel = getGaugeLevel(rolls);\r\n\r\n            setFirstDie(first);\r\n            setSecondDie(second);\r\n            setResult(first + second);\r\n            setGauge(gaugeLevel);\r\n        }\r\n    }, [diceState]);\r\n\r\n    const onRollClick = () => {\r\n        const first = Math.floor(Math.random() * 6) + 1;\r\n        const second = Math.floor(Math.random() * 6) + 1;\r\n\r\n        action_rollDice([first, second]);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Segment>\r\n                <Header as='h1'>Roll Them Dice</Header>\r\n                <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                    <div style={{position: 'relative'}}>\r\n                        <div style={{marginBottom: '4em'}}>\r\n                            <div style={{fontSize: '20px', marginBottom: '1em'}}>{firstDie}, {secondDie}</div>\r\n                            <div style={{fontSize: '50px'}}>Roll: {result}</div>\r\n                        </div>\r\n                        <Button\r\n                            primary\r\n                            onClick={onRollClick}>\r\n                            Roll 'em\r\n                        </Button>\r\n                    </div>\r\n                    <div>\r\n                        {/* <Gauge value={gauge} width={200} height={160} label=\"Salt level\" /> */}\r\n                    </div>\r\n                </div>\r\n            </Segment>\r\n            <Segment>\r\n                <Header as='h1'>Look At The Bullshit, Look At It</Header>\r\n                <Bar\r\n                    data={data}\r\n                    options={{\r\n                        scales: {\r\n                            yAxes: [{\r\n                                display: true,\r\n                                ticks: {\r\n                                    stepSize: 1,\r\n                                    beginAtZero: true\r\n                                }\r\n                            }]\r\n                        },\r\n                        legend: {\r\n                            display: false\r\n                        },\r\n                    }}\r\n                >\r\n                </Bar>\r\n            </Segment>\r\n        </Container>\r\n    );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        diceState: state.dice,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        action_rollDice: rollDice(dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dice);","import { ROLL_DICE } from \"./dice.actions\";\r\n\r\nconst initialState = {\r\n    rolls: [],\r\n};\r\n\r\nfunction diceReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ROLL_DICE: {\r\n            return {\r\n                ...state,\r\n                rolls: [...state.rolls, action.roll],\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport default diceReducer;","import { createStore, combineReducers } from 'redux';\r\nimport diceReducer from './dice/dice.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    dice: diceReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { Menu } from 'semantic-ui-react';\nimport { Provider } from 'react-redux';\nimport Dice from './components/dice/dice';\n\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport store from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Menu>\n          <Menu.Item as={ Link } name='dice' to='dice'>\n            Dice\n          </Menu.Item>\n          <Menu.Item as={ Link } name='stats' to='stats'>\n            Stats  \n          </Menu.Item>\n        </Menu>\n        <Switch>\n          <Route path=\"/dice\">\n            <Dice></Dice>\n          </Route>\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}